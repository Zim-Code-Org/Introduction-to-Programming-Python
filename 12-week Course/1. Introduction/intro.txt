Table of Contents

Purpose of the textbook .................................................................................. 4
Guidelines for the teacher ............................................................................... 4
Lesson Plans (1hr 40min per lesson) ...................................................................... 5
Debugging ................................................................................................ 6
Homework.................................................................................................. 6
Demonstrations ........................................................................................... 6
Conventions .............................................................................................. 6
Terminology .............................................................................................. 6
Installing Python ........................................................................................ 7
Chapter 1 – Introduction to Python ....................................................................... 8
The Computer Model ........................................................................................ 8
Why Python? ............................................................................................... 9
The IDE ................................................................................................... 9
Chapter 2 – Variables ..................................................................................... 14
Abstraction ............................................................................................... 14
Variables ................................................................................................. 15
Syntax and Semantics ...................................................................................... 16
Chapter 3 – Data Types .................................................................................... 18
Integers .................................................................................................. 18
Floating Point Numbers .................................................................................... 19
Type casting .............................................................................................. 19
Strings ................................................................................................... 20
Boolean types ............................................................................................. 22
Variables and Data Types .................................................................................. 24
Chapter 4: Introduction to functions ...................................................................... 26
Chapter 5: Flow Control ................................................................................... 35
Chapter 6: Loops .......................................................................................... 41
While Loops ............................................................................................... 41
For Loops and iteration ................................................................................... 44
Chapter 7: Data structures I (Lists, Tuples and Strings) ................................................... 50
You already know a data structure! ......................................................................... 50
Tuples ..................................................................................................... 50
Lists ...................................................................................................... 52
Chapter 8: More Functions and Variables .................................................................... 64 
Scope ...................................................................................................... 64
Recursion (Optional Topic, don’t teach if class doesn’t understand everything else well) ................... 71
Chapter 9: Algorithms and Pseudocode ....................................................................... 74
Chapter 8B: Data Structures II ............................................................................. 80
Dictionaries ................................................................................................ 80
Dictionary Methods .......................................................................................... 81
Iterating on a Dictionary .................................................................................. 81
Dictionary keys as immutable objects ........................................................................ 82
Examples of uses of dictionaries ............................................................................ 82
Chapter 10: Working with APIs: Calico ...................................................................... 85
Project Calico ............................................................................................. 85
Environment ................................................................................................ 86
A brief detour .............................................................................................. 86
Back to Calico ............................................................................................. 88
Animation ................................................................................................... 96
Chapter 11: More Examples ................................................................................ 110
Easier Examples............................................................................................. 110
Medium Examples............................................................................................. 111
Difficult Examples ......................................................................................... 113
Chapter 12: Projects......................................................................................... 116
Project 1 (Easy): Instagram ............................................................................ 116
Object Oriented Programming .............................................................................. 119
Definition of a class ..................................................................................... 119
Inheritance and Polymorphism .............................................................................. 124 


What is Zim Code?

Zim Code is a nonprofit coding school that was founded by Alvin Chitena in 2016. Our mission at Zim Code
is to bringing coding to the forefront of youth education and empowerment in Zimbabwe. Code is the language of the 
present and the future, and so we believe that it is necessary for everyone to have the opportunity to
learn it. Zim Code is made of young and dedicated Zimbabweans from all walks of life who are passionate about coding, 
education, entrepreneurship and philanthropy. 

Given the vast socio-economic issues that plague Zimbabwe, we see it necessary to remove the many barriers that people
may face when trying to learn how to code, namely quality information and resources. This course, the Introduction to 
Programming: Python (12-weeks) is one of the many initiatives we are spearheading to further our mission.

To find out more about Zim Code, visit our website: www.zimcode.org

Purpose of the textbook

This text is designed to cater specifically to high school students in Zimbabwe and other African
countries whose education system is based on the GCE A level curriculum. The idea is to
provide a low barrier text in writing that is easy to understand for African high school students with
very little assumptions made about their background. 

A wide range of relatable examples are used throughout the text to provide analogies and help students grasp the abstract
concepts in Computer Science and Programming. This is done with the hope that students may begin to appreciate how Computer 
Scientists and Software Engineers solve problems and how programming skills can be applied in the real world.

In addition to learning the basics of coding, students will also inevitably learn and improve in other subject areas. The link 
between Computer Science and Mathematics is undeniable and in fact, fundamental. While it is easy to fall into the temptation 
of providing mostly computational and mathematical examples, we tried our best to include a wide range of examples appealing to 
all three major fields of study: Science, Commerce and Humanities. It is important to go through the guidelines provided in this 
teaching guide as they give tips on how to get the most out of the text and examples.

This course will give a 12-week introduction to programming in Python which is one of the most accessible languages to beginners 
due to its similarity to written English and white space delimiting. White space delimiting is the use of indentations and line 
breaks rather than brackets to group code blocks e.g. in a function/loop. Python is also a very powerful tool in computation (The NumPy
package is used in various fields for numerical computation) and web design (Instagram is written in Django/Flask, Python frameworks) 
with a very good support and development network. It is also easy to install and is often preinstalled on most operating systems 
(unfortunately, not on Windows).

An important part of this text is that it should be fun and interactive to the students. It involves a lot of live demoes. Examples 
are chosen from real world problems so that it becomes immediately apparent to the students how programming applies to real life.
Students will also learn a lot of broader concepts in programming such as abstraction, functionalprogramming, object oriented programming* 
and optimization.

This course is designed to be open, fun and interactive. We encourage deviating from the standard lecture model because the best way to 
learn programming is by actually doing it. The style will be a combination of lecture and lab type classes where a concept is introduced for 
a few minutes, the students get to use it and then reflection on the use of the concept will hopefully bring to light its value and clear any misconceptions. 

While we provide a detailed lesson plan, experimentation and flexibility is encouraged so that the most can be made from every class. 
If something does not work particularly well, change it and if the teacher has better ways of teaching the class in their context, they should. 
We would like feedback on what worked and what didn’t, if you have any, email mgcini@zimcode.org
